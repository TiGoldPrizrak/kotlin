// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.


// Generated by Quartus Prime Version 16.0 (Build Build 211 04/27/2016)
// Created on Fri Mar 13 15:28:50 2020

user_bcvs user_bcvs_inst
(
	.iclk(iclk_sig) ,	// input  iclk_sig
	.ireset(ireset_sig) ,	// input  ireset_sig
	.isig_initial(isig_initial_sig) ,	// input  isig_initial_sig
	.iIm_Re_sample(iIm_Re_sample_sig) ,	// input [31:0] iIm_Re_sample_sig
	.format(format_sig) ,	// input [2:0] format_sig
	.channels(channels_sig) ,	// input [3:0] channels_sig
	.num_pack(num_pack_sig) ,	// input [7:0] num_pack_sig
	.numOI(numOI_sig) ,	// input [15:0] numOI_sig
	.numTIR(numTIR_sig) ,	// input [15:0] numTIR_sig
	.lPPS(lPPS_sig) ,	// input [31:0] lPPS_sig
	.ARUSH(ARUSH_sig) ,	// input [31:0] ARUSH_sig
	.Bcur(Bcur_sig) ,	// input [15:0] Bcur_sig
	.Icur(Icur_sig) ,	// input [15:0] Icur_sig
	.size_pack(size_pack_sig) ,	// input [7:0] size_pack_sig
	.osig_init_sig(osig_init_sig_sig) ,	// output  osig_init_sig_sig
	.oRd_addr_BLVDS(oRd_addr_BLVDS_sig) ,	// output [15:0] oRd_addr_BLVDS_sig
	.oUser_data(oUser_data_sig) 	// output [17:0] oUser_data_sig
);

